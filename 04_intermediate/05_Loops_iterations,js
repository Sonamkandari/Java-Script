// for loop  Syntax and basic structure
const array =[3,4,5,6,7,8];
for(let i=0;i<=0;i++){// here loop is used to iterate your complete array upto the last element 
    const element=array[3];// element variable will contain the value which is at index 3 rd
    console.log(element);// here we are printing the element which is at 3 rd index 

} 

const storage =[3,4,5,6,7,8];
for(let i=0;i<=0;i++){// loop is used to iterate your complete array upto the last element 
    const element=array[3];//
    console.log(element);// here we are printing the element which is at 3 rd index 
   if(element==6){
    console.log("at index 3 array contain element 6 yahuuuuu. ");
    
   }else{
    console.log("element is not found");
    
   }
   
} 

//nested loops (loops inside a loop)
for (let i = 0; i <=10; i++) {
    console.log(`outer loop value :${i}`);
    
    for (let j = 0; j <=10; j++) {
        //console.log(`innner loop valoue ${j} and inner loop ${i}`);
        
        //simple logics for tables from 1 to 10
        console.log(i+"*"+j+'='+i*j);
        
        
    }
    
}
//applying loops in arrays in java script
let myArray =["sonam","annu","Bhoot","Dora"]
for(let i=0;i<myArray.length;i++){ // here we are using this loop for iterating the array which we declared here 
    const element = myArray[i];
    console.log(element);// printing all the elements of the array

}


// some basic key words 
//Break and continue keyword 

//The break keyword is like telling your code, "Stop right here and jump out of this loop or switch case." It’s used when you want to exit something early.

for(let i=1;i<=5;i++){
    if(i==3){
        break;// stop the loop when i is 3
    }// to break the control flow
    console.log(i);
    
}

// The continue keyword is like saying, "Skip this step and move to the next one." It’s used when you want to skip certain parts of a loop.
for (j=1;j<=5;j++){
    if(j==4){
        continue;//skip when i is 4
    }
    console.log(j);
}